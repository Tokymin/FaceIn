buildscript {
    repositories {
        maven { url 'https://fabric-artifacts.s3.amazonaws.com/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'io.fabric'
def AAVersion = '3.3.2'
def static getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}
android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    defaultConfig {
        applicationId "com.arcsoft.sdk_demo"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.1"
        sourceSets.main {
            jniLibs.srcDirs = ['libs']
        }
        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "GIT_REVISION", "\"${getGitVersion()}\""
        buildConfigField "String", "BUILD_DATE", "\"${new Date().toLocaleString()}\""
        multiDexEnabled true

        ndk {
            abiFilters "armeabi-v7a"
        }
    }

    task ndkClean(type: Delete) {
        // remove unused archs from build cache
        delete fileTree('.externalNativeBuild') {
            exclude defaultConfig.ndk.abiFilters.collect { '**/' + it }
        }
    }
    tasks.findByPath(':clean').dependsOn ndkClean
//    splits {
//        abi {
//            enable true
//            reset()
//            include 'armeabi-v7a'//select ABIs to build APKs for
//            universalApk true //generate an additional APK that contains all the ABIs
//        }
//    }
//
//    // map for the version code
//    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]
//
//    android.applicationVariants.all { variant ->
//        // assign different version code for each output
//        variant.outputs.each { output ->
//            output.versionCodeOverride =
//                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + android.defaultConfig.versionCode
//        }
//    }
//    signingConfigs {
//        debug { storeFile file("debug.keystore") }
//
//        release {
//            storeFile file('release.keystore')
//            storePassword 'ilyw5730w'
//            keyAlias 'key0'
//            keyPassword 'ilyw5730w'
//        }
//    }
//    task ndkClean(type: Delete) {
//        // remove unused archs from build cache
//        delete fileTree('.externalNativeBuild') {
//            exclude defaultConfig.ndk.abiFilters.collect { '**/' + it }
//        }
//    }
//    tasks.findByPath(':clean').dependsOn ndkClean
    buildTypes {

        debug {
            signingConfig signingConfigs.debug
            manifestPlaceholders = [AMAP_KEY: "09fd4efd3e28e9bf1f449ecec7d34bfe"]
            ext.enableCrashlytics = false
        }
        release {
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFile('proguard.cfg')
            manifestPlaceholders = [AMAP_KEY: "ee20324fba1c7f4ad7a4a207e7f08e8d"]
            ext.enableCrashlytics = true
        }
    }
}
repositories {
    flatDir {
        dirs 'aars'
    }
    maven { url 'https://fabric-artifacts.s3.amazonaws.com/public' }
}

dependencies {
    compile 'com.android.support:multidex:1.0.1'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(path: ':android-extend', configuration: 'release')
    compile files('libs/facedetection.jar')
    compile files('libs/facerecognition.jar')
    compile files('libs/facetracking.jar')
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:support-vector-drawable:26.1.0'
    compile 'com.android.support:support-v4:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    compile 'com.jakewharton:butterknife:7.0.1'
    compile project(path: ':uikit')
    compile project(path: ':avchatkit')
    compile(name: 'HMS-SDK-2.4.0.300', ext: 'aar')
    compile 'com.google.firebase:firebase-messaging:11.6.0'
    compile 'com.google.android.gms:play-services-base:11.6.0'
    compile 'com.meizu.flyme.internet:push-internal:3.4.2@aar'
    compile 'com.netease.nimlib:jsbridge:1.3.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }
}
apt {
    arguments {

        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        resourcePackageName "com.arcsoft.sdk_demo"
    }
}